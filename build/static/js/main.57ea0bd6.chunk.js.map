{"version":3,"sources":["services/socket.js","store/index.js","store/actions.js","components/codeboard.js","utils/parser.js","components/sidePanel.js","components/header.js","components/register.js","pages/styles.js","pages/home.js","routes.js","themes/index.js","themes/global.js","app.js","index.js","resources/UERJ_Logo.svg"],"names":["socket","io","config","api_uri","INITIAL_STATE","user","id","undefined","selectedUser","code","language","default","styles","fontSize","theme","tabSize","autoComplete","persistConfig","key","storage","persistedReducer","persistReducer","state","action","type","boardName","board","store","createStore","persistor","persistStore","changeSelectedUser","Codeboard","boardStyle","boardLanguage","useState","setCode","codeboardRef","useRef","getState","useEffect","undo","console","log","redo","commands","current","editor","exec","commandKeyBinding","subscribe","focus","ref","readOnly","mode","enableBasicAutocompletion","enableLiveAutocompletion","style","width","height","name","onLoad","event","onChange","text","dispatch","changeCode","dataObject","emit","showPrintMargin","highlightActiveLine","showGutter","value","parseName","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","View","styled","div","props","primaryColor","Header","p","white","HeaderView","secondaryColor","Text","ItemDiv","isSelected","SidePanel","data","dataUsers","users","setUsers","selectedUserID","setSelectedUserID","decodedUsers","Object","keys","map","encodedUser","j","hexes","match","back","String","fromCharCode","parseInt","username","password","decodeID","userData","push","window","addEventListener","onClick","changeUser","color","size","Row","Logo","img","HeaderComponent","src","LogoUERJ","alt","Input","input","Button","button","modalStyle","overlay","position","top","left","right","bottom","backgroundColor","content","display","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","justifyContent","RegisterModal","isVisible","closeModal","isOpen","setIsOpen","setUsername","setPassword","contentLabel","e","target","str","result","charCodeAt","toString","slice","encodeID","registerUser","Column","location","pathname","replace","Home","setData","setIsVisible","setStyles","setLanguage","loadStylesAndLanguage","changeLanguage","c","on","newData","selectedUserData","find","connectToBoardSocket","whoIsWriting","Routes","path","component","lightTheme","fontBlack","fontFamily","light","lightItalic","regular","regularItalic","medium","mediumItalic","bold","boldItalic","AppTheme","createGlobalStyle","App","loading","ReactDOM","render","document","getElementById","Modal","setAppElement","module","exports"],"mappings":"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","file":"static/js/main.57ea0bd6.chunk.js","sourcesContent":["import io from \"socket.io-client\";\r\nimport config from \"../config.json\";\r\n\r\nconst socket = io(config.api_uri);\r\n\r\nexport default socket;\r\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst INITIAL_STATE = {\n  user: {\n    id: undefined,\n  },\n  selectedUser: {\n    id: undefined,\n    code: undefined,\n  },\n  language: { default: \"python\" },\n  styles: {\n    fontSize: 16,\n    theme: \"xcode\",\n    tabSize: 2,\n    autoComplete: true,\n  },\n};\n\nfunction reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"CHANGE_LANGUAGE\":\n      return {\n        ...state,\n        language: {\n          ...state.language,\n          [action.boardName]: action.language,\n        },\n      };\n    case \"CHANGE_CODE\":\n      return {\n        ...state,\n        user: { ...state.user, [action.board]: action.code },\n        selectedUser: { id: action.id, code: action.code },\n      };\n    case \"CHANGE_SELECTED_USER\":\n      return {\n        ...state,\n        selectedUser: { id: action.id, code: action.code },\n      };\n    case \"REGISTER_USER\":\n      return {\n        ...state,\n        user: { id: action.id },\n        selectedUser: { id: action.id },\n      };\n    default:\n      return state;\n  }\n}\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = createStore(persistedReducer);\nexport const persistor = persistStore(store);\n","export function changeLanguage(language, boardName) {\n  return {\n    type: \"CHANGE_LANGUAGE\",\n    boardName,\n    language,\n  };\n}\n\nexport function changeSelectedUser(id, code) {\n  return {\n    type: \"CHANGE_SELECTED_USER\",\n    id,\n    code,\n  };\n}\n\nexport function registerUser(id, code) {\n  return {\n    type: \"REGISTER_USER\",\n    id,\n  };\n}\n\nexport function changeCode(board, code, id) {\n  return {\n    type: \"CHANGE_CODE\",\n    board,\n    code,\n    id,\n  };\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\nimport socket from \"../services/socket\";\n\nimport { store } from \"../store\";\nimport { changeCode } from \"../store/actions\";\n\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-r\";\n\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/webpack-resolver\";\n\nconst Codeboard = ({ boardName, boardStyle, boardLanguage }) => {\n  const [code, setCode] = useState(\"print('Hello World!')\");\n\n  const codeboardRef = useRef(null);\n  const { user, selectedUser } = store.getState();\n\n  useEffect(() => {\n    setCode(store.getState().user[boardName]);\n\n    function undo() {\n      console.log(\"undo trigger\");\n    }\n\n    function redo() {\n      console.log(\"redo trigger\");\n    }\n    const { editor } = codeboardRef.current;\n    const { commands } = editor;\n    commands.commands.undo.exec = undo;\n    commands.commandKeyBinding[\"ctrl-z\"].exec = undo;\n    commands.commands.redo.exec = redo;\n    commands.commandKeyBinding[\"ctrl-y\"].exec = redo;\n  }, [boardName, boardStyle, boardLanguage]);\n\n  useEffect(\n    () =>\n      store.subscribe(() => {\n        // console.log(\"rendered\");\n        setCode(store.getState().selectedUser.code);\n        codeboardRef.current.editor.focus();\n      }),\n    []\n  );\n\n  function onChangeText(text) {\n    const { id } = store.getState().user;\n    store.dispatch(changeCode(boardName, text, id));\n    const dataObject = { id, code: text };\n    socket.emit(boardName, dataObject);\n  }\n\n  function onLoad(event) {\n    event.focus();\n  }\n\n  return (\n    <AceEditor\n      focus\n      ref={codeboardRef}\n      readOnly={user.id !== selectedUser.id}\n      mode={boardLanguage}\n      theme={boardStyle.theme}\n      fontSize={boardStyle.fontSize}\n      tabSize={boardStyle.tabSize}\n      enableBasicAutocompletion={boardStyle.autoComplete}\n      enableLiveAutocompletion={boardStyle.autoComplete}\n      style={{ width: \"80vw\", height: \"91vh\" }}\n      name=\"CodeEditor\"\n      onLoad={onLoad}\n      onChange={onChangeText}\n      showPrintMargin={false}\n      highlightActiveLine={true}\n      showGutter={true}\n      value={user.id === selectedUser.id ? code : selectedUser.code}\n    />\n  );\n};\n\nexport default Codeboard;\n","export function encodeID(username, password) {\r\n  const str = `${username}$$$${password}`;\r\n\r\n  let hex, i;\r\n  let result = \"\";\r\n  for (i = 0; i < str.length; i++) {\r\n    hex = str.charCodeAt(i).toString(16);\r\n    result += (\"000\" + hex).slice(-4);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function decodeID(id) {\r\n  let j;\r\n  const hexes = id.match(/.{1,4}/g) || [];\r\n  let back = \"\";\r\n  for (j = 0; j < hexes.length; j++) {\r\n    back += String.fromCharCode(parseInt(hexes[j], 16));\r\n  }\r\n\r\n  const [username, password] = back.split(\"$$$\");\r\n\r\n  return { username: parseName(username), password, id };\r\n}\r\n\r\nexport function parseName(name) {\r\n  let splitStr = name.toLowerCase().split(\" \");\r\n  for (let i = 0; i < splitStr.length; i++) {\r\n    splitStr[i] =\r\n      splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n  }\r\n  name = splitStr.join(\" \");\r\n  return name;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { decodeID } from \"../utils/parser\";\r\nimport { store } from \"../store\";\r\n\r\nimport { changeSelectedUser } from \"../store/actions\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { FaFileCode } from \"react-icons/fa\";\r\n\r\nconst View = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 20vw;\r\n  background-color: ${(props) => props.theme.primaryColor};\r\n`;\r\n\r\nconst Header = styled.p`\r\n  font-size: 16pt;\r\n  font-weight: 600;\r\n  font-family: \"Fira Code VF\", monospace;\r\n  color: ${(props) => props.theme.white};\r\n  align-self: center;\r\n`;\r\n\r\nconst HeaderView = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 9vh;\r\n  min-height: 70px;\r\n  justify-content: center;\r\n  background-color: ${(props) => props.theme.secondaryColor};\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 16pt;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.white};\r\n  padding-left: 5;\r\n`;\r\n\r\nconst ItemDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding-left: 5%;\r\n  padding-right: 5%;\r\n  align-items: center;\r\n  background-color: ${(props) =>\r\n    props.isSelected ? props.theme.secondaryColor : props.theme.primaryColor};\r\n`;\r\n\r\nconst SidePanel = ({ data, dataUsers }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUserID, setSelectedUserID] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const decodedUsers = [];\r\n    const userlist = Object.keys(data);\r\n    userlist.map((encodedUser) => {\r\n      if (!!encodedUser) {\r\n        const { username, password, id } = decodeID(encodedUser);\r\n        const userData = {\r\n          username,\r\n          password,\r\n          id,\r\n          code: data[encodedUser].code,\r\n        };\r\n        return decodedUsers.push(userData);\r\n      }\r\n      return null;\r\n    });\r\n    setUsers(decodedUsers);\r\n\r\n    window.addEventListener(\"resize\", (event) => {\r\n      //   console.log(\"resize\", event.currentTarget.innerWidth);\r\n    });\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setSelectedUserID(store.getState().user.id);\r\n    store.subscribe(() => {\r\n      console.log(\"rendered sidepanel\");\r\n      setSelectedUserID(store.getState().selectedUser.id);\r\n    });\r\n  }, []);\r\n\r\n  function changeUser(user) {\r\n    store.dispatch(changeSelectedUser(user.id, user.code));\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <HeaderView>\r\n        <Header>{\"<CodeBoard/>\"}</Header>\r\n      </HeaderView>\r\n      {users.map((user, key) => {\r\n        return (\r\n          <ItemDiv\r\n            isSelected={selectedUserID === user.id}\r\n            key={key}\r\n            onClick={() => changeUser(user)}\r\n          >\r\n            <FaFileCode color={\"#fff\"} size={\"22pt\"} />\r\n            <Text>{user.username}</Text>\r\n          </ItemDiv>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LogoUERJ from \"../resources/UERJ_Logo.svg\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst View = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 9vh;\r\n  min-height: 70px;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.secondaryColor};\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 16pt;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  padding-right: 2%;\r\n  color: ${(props) => props.theme.white};\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  width: 80vw;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 30pt;\r\n  padding-right: 2%;\r\n`;\r\n\r\nconst HeaderComponent = ({ boardName }) => {\r\n  return (\r\n    <View>\r\n      <Row>\r\n        <Text>{boardName}</Text>\r\n        <Logo src={LogoUERJ} alt=\"React Logo\" />\r\n      </Row>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { encodeID } from \"../utils/parser\";\r\nimport { store } from \"../store\";\r\n\r\nimport { registerUser } from \"../store/actions\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst View = styled.div`\r\n  padding-left: 5%;\r\n  padding-right: 5%;\r\n  padding-top: 10%;\r\n  padding-bottom: 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50vw;\r\n  background-color: #0f0;\r\n  align-self: center;\r\n`;\r\nconst Input = styled.input``;\r\nconst Button = styled.button`\r\n  margin-top: 10%;\r\n`;\r\n\r\nconst modalStyle = {\r\n  overlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    top: \"0px\",\r\n    left: \"0px\",\r\n    right: \"0px\",\r\n    bottom: \"0px\",\r\n    border: \"0px\",\r\n    background: \"transparent\",\r\n    overflow: \"auto\",\r\n    WebkitOverflowScrolling: \"touch\",\r\n    borderRadius: \"0px\",\r\n    outline: \"none\",\r\n    padding: \"0px\",\r\n    justifyContent: \"center\",\r\n  },\r\n};\r\n\r\nconst RegisterModal = ({ isVisible, closeModal }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isVisible);\r\n  }, [isVisible]);\r\n\r\n  function handleRegister() {\r\n    const id = encodeID(username, password);\r\n    store.dispatch(registerUser(id));\r\n    return closeModal();\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} contentLabel=\"Example Modal\" style={modalStyle}>\r\n      <View>\r\n        <h1>Usuário</h1>\r\n        <Input onChange={(e) => setUsername(e.target.value)} />\r\n        <h1>Senha</h1>\r\n        <Input onChange={(e) => setPassword(e.target.value)} />\r\n        <Button onClick={handleRegister}>Registrar</Button>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RegisterModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const View = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: #0f0;\r\n`;\r\n\r\nexport const Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 80vw;\r\n  background-color: #ff0;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Codeboard from \"../components/codeboard\";\r\nimport SidePanel from \"../components/sidePanel\";\r\nimport HeaderComponent from \"../components/header\";\r\nimport RegisterModal from \"../components/register\";\r\n\r\nimport socket from \"../services/socket\";\r\n\r\nimport { store } from \"../store\";\r\nimport { changeSelectedUser, changeLanguage } from \"../store/actions\";\r\n\r\nimport { View, Column } from \"./styles\";\r\n\r\nconst boardName = window.location.pathname\r\n  .toLowerCase()\r\n  .replace(\"/codeboard/\", \"\");\r\n\r\nconsole.log(\"window\", window.location.pathname);\r\nconsole.log(\"boardName\", boardName);\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState(null);\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [styles, setStyles] = useState({});\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n\r\n  function loadStylesAndLanguage() {\r\n    const { language } = store.getState();\r\n    setStyles(store.getState().styles);\r\n    if (!language[boardName]) {\r\n      store.dispatch(changeLanguage(language.default, boardName));\r\n    }\r\n    setLanguage(language[boardName]);\r\n  }\r\n\r\n  function connectToBoardSocket() {\r\n    setIsVisible(false);\r\n\r\n    store.dispatch(\r\n      changeSelectedUser(\r\n        store.getState().user.id,\r\n        store.getState().user[boardName]\r\n      )\r\n    );\r\n\r\n    socket.emit(\"codeboard\", boardName);\r\n\r\n    const dataObject = {\r\n      id: store.getState().user.id,\r\n      code: store.getState().user[boardName] || \"print('Hello World!')\",\r\n    };\r\n    socket.emit(boardName, dataObject);\r\n\r\n    setData((c) => ({ ...c, [dataObject.id]: dataObject }));\r\n    socket.on(boardName, (newData) => {\r\n      setData((c) => ({ ...c, ...newData }));\r\n      const selectedUserData =\r\n        newData[\r\n          Object.keys(newData).find(\r\n            (id) => id === store.getState().selectedUser.id\r\n          )\r\n        ];\r\n      store.dispatch(\r\n        changeSelectedUser(selectedUserData?.id, selectedUserData?.code)\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadStylesAndLanguage();\r\n    if (!!store.getState().user.id) {\r\n      connectToBoardSocket();\r\n    }\r\n  }, [isVisible]);\r\n\r\n  useEffect(() => store.subscribe(loadStylesAndLanguage), []);\r\n\r\n  return (\r\n    <View>\r\n      <RegisterModal\r\n        isVisible={isVisible}\r\n        closeModal={() => setIsVisible(false)}\r\n      />\r\n      <SidePanel\r\n        data={data ? data : []}\r\n        whoIsWriting={data ? Object.keys(data) : []}\r\n      />\r\n      <Column>\r\n        <HeaderComponent boardName={boardName} />\r\n        {!isVisible && (\r\n          <Codeboard\r\n            boardName={boardName}\r\n            boardStyle={styles}\r\n            boardLanguage={language}\r\n          />\r\n        )}\r\n      </Column>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./pages/home\";\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/codeboard\" component={Home} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","export const lightTheme = {\r\n  primaryColor: \"#016BA5\",\r\n  secondaryColor: \"#01507C\",\r\n  white: \"#fff\",\r\n  fontBlack: \"#333\",\r\n  fontFamily: {\r\n    light: \"Montserrat-Light\", // 300\r\n    lightItalic: \"Montserrat-LightItalic\",\r\n    regular: \"Montserrat-Regular\", // 400\r\n    regularItalic: \"Montserrat-Italic\",\r\n    medium: \"Montserrat-Medium\", // 500\r\n    mediumItalic: \"Montserrat-MediumItalic\",\r\n    bold: \"Montserrat-SemiBold\", // 600\r\n    boldItalic: \"Montserrat-SemiBoldItalic\",\r\n  },\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const AppTheme = createGlobalStyle`\r\n  body {\r\n    font-family: Montserrat !important;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Routes from \"./routes\";\nimport { store, persistor } from \"./store\";\nimport { lightTheme } from \"./themes\";\nimport { AppTheme } from \"./themes/global.js\";\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ThemeProvider theme={lightTheme}>\n        <AppTheme />\n        <Routes />\n      </ThemeProvider>\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport Modal from \"react-modal\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nModal.setAppElement(document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/UERJ_Logo.e608b5a7.svg\";"],"sourceRoot":""}